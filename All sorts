#include<stdio.h>

void swap(int* h,int* k){
    int temp=*h;
    *h=*k;
    *k=temp;
}

void merge(int *a,int l,int h,int mid){
    int n1=mid-l+1,n2=h-mid;
    int p[n1],k[n2];
    int i,j;
    
    for(i=0;i<n1;i++){
        p[i]=a[l+i];
        
    }
    for(j=0;j<n2;j++){
        k[j]=a[mid+1+j];
        
    }
    
    i=0;
    j=0;
    int left=l;
    
    while(i<n1 && j<n2){
        if(p[i]<=k[j]){
            a[left++]=p[i++];
        }
        else{
            a[left++]=k[j++];
        }
    }
    
    while(i<n1){
        a[left++]=p[i++];
    }
    while(j<n2){
        a[left++]=k[j++];
    }
}

void merge_sort(int *a,int l,int h){
    if(h>l){
        int mid=(l+h)/2;
        merge_sort(a,l,mid);
        merge_sort(a,mid+1,h);
        merge(a,l,h,mid);
    }
}

void heapify(int *a,int n,int i){
    int largest=i;
    int left=2*i+1;
    int right=2*i+2;
    
    if(left<n && a[left]>a[largest]){
       largest=left;  
    }
    if(right<n && a[right]>a[largest]){
       largest=right;
    }
    
    if(largest!=i){
        swap(&a[i],&a[largest]);
        heapify(a,n,largest);
    }
}

void heap_sort(int *a,int n){
    for(int i=n/2-1;i>=0;i--){
        heapify(a,n,i);
    }
    for(int j=n-1;j>=0;j--){
        swap(&a[0],&a[j]);
        heapify(a,j,0);
    }
}

int partition(int *a,int l,int r){
    int x=a[l];
    int i=l,j=r;
    
    while(i<j){
        while(a[i]<=x){
            i++;
        }
        while(a[j]>x){
            j--;
        }
        
        if(i<j){
            swap(&a[i],&a[j]);
        }
        
    }
    swap(&a[j],&a[l]);
    return j;
}

void quick_sort(int *a,int l,int h){
    if(h>l){
        int q=partition(a,l,h);
        quick_sort(a,l,q-1);
        quick_sort(a,q+1,h);
    }
}

void bubble_sort(int *a,int n){
    for(int i=0;i<n;i++){
        for(int j=0;j<n-i-1;j++){
            if(a[j]>a[j+1]){
                swap(&a[j],&a[j+1]);
            }
        }
    }
}

void insertion_sort(int *a,int n){
    for(int i=0;i<n;i++){
        int key=a[i];
        int j=i-1;
        while(j>=0 && a[j]>=key){
            a[j+1]=a[j];
            j--;
        }
        a[j+1]=key;
    }
}

void selection_sort(int *a,int n){
    for(int i=0;i<n;i++){
        int min=a[i];
        for(int j=i+1;j<n;j++){
            if(a[j]<=min){
                min=a[j];
                swap(&a[j],&a[i]);
                
            }
        }
        
    }
}

void input_array(int *a,int n){
    for(int i=0;i<n;i++){
        printf("enter a number:");
        scanf("%d",&a[i]);
    }
}

void print_array(int *a,int n){
    for(int i=0;i<n;i++){
        printf("%d\n",a[i]);
    }
}

void main(){
    int a[30], n,c=0;
    printf("number of elements:");
    scanf("%d",&n);
    input_array(a,n);
    printf("unsorted array: \n");
    print_array(a,n);
    printf("enter a choice:");
    scanf("%d",&c);
    switch(c){
        case 1:{
               bubble_sort(a,n);
               break;}
        case 2:{
               selection_sort(a,n);
               break;}
        case 3:{
               insertion_sort(a,n);
               break;}
        case 4: {
               merge_sort(a,0,n-1);
               break;}
        case 5:{
               quick_sort(a,0,n-1);
               break;}
        case 6:{
               heap_sort(a,n);
               break;}
            
    }
    printf("sorted array: \n");
    print_array(a,n);
}
